<Window x:Class="WpfApplication.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF45"
        DataContext="{Binding MainWindowVM, Source={StaticResource Locator}}"
        Title="MainWindow" Height="650" Width="800">
    <Window.Resources>
        <Style x:Key="myStyle" TargetType="Button">
            <Setter Property="Background" Value="LightBlue" />
            <Setter Property="Padding" Value="8,4" />
            <Setter Property="Margin" Value="4" />
        </Style>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Height" Value="35" />
            <Setter Property="SeparatorBrush" Value="DarkRed" />
            <Setter Property="FontWeight" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <Border x:Name="columnHeaderBorder" BorderThickness="1" Padding="3,0,3,0">
                                <Border.BorderBrush>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#A5A5A5" />
                                        <GradientStop Offset="1" Color="#4B4B4B" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#DEB40A" />
                                        <GradientStop Offset="1" Color="#FF7F00" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <ContentPresenter   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
			                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
				                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="columnHeaderBorder" 
Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="LightYellow" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="LightYellow" />
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <Grid>
                            <Border x:Name="DGR_Border"
			                        BorderBrush="{TemplateBinding BorderBrush}"
			                        BorderThickness="{TemplateBinding BorderThickness}"
		                            SnapsToDevicePixels="True">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#AAFFFFAA" />
                                        <GradientStop Offset="1" Color="#AAFFD455" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <SelectiveScrollingGrid>
                                    <SelectiveScrollingGrid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </SelectiveScrollingGrid.ColumnDefinitions>
                                    <SelectiveScrollingGrid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </SelectiveScrollingGrid.RowDefinitions>
                                    <DataGridCellsPresenter Grid.Column="1"
			                            ItemsPanel="{TemplateBinding ItemsPanel}"
			                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <DataGridDetailsPresenter Grid.Row="1"
			                            Grid.Column="1"
			                            SelectiveScrollingGrid.SelectiveScrollingOrientation="{
                                            Binding AreRowDetailsFrozen,
                                            ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
			                                Converter={x:Static DataGrid.RowDetailsScrollingConverter},
			                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
			                            Visibility="{TemplateBinding DetailsVisibility}" />
                                    <DataGridRowHeader Grid.RowSpan="2"
			                            SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
			                            Visibility="{   Binding HeadersVisibility,
                                                        ConverterParameter={x:Static DataGridHeadersVisibility.Row},
                                                        Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                </SelectiveScrollingGrid>
                            </Border>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Normal_AlternatingRow">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" 
Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="#AAF0C570" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" 
Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="#AAFF7F00" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Normal_Selected">
                                        <Storyboard>
                                            <!-- ColorAnimation here same as Normal_AlternatingRow state -->
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <!-- ColorAnimation here same as Normal_AlternatingRow state -->
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <StackPanel Width="376"  Background="LightBlue" Orientation="Vertical" Height="100" Margin="48,25,0,0" 
                    VerticalAlignment="Top" HorizontalAlignment="Left">
            <Label Content="Filtres :" Margin="20,10,0,0" HorizontalAlignment="Left" Width="50"/>
            <StackPanel Orientation="Horizontal">
                <TextBox x:Name="filtreVal" Width="100" Margin="10,10,10,10">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged" >
                            <cmd:EventToCommand Command="{Binding TextChangedCommand}"
                                        PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <ComboBox x:Name="filtreType" ItemsSource="{Binding ListeFiltres, Mode=OneWay}" 
                          Width="75" Height="24" Margin="10,10,10,10" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged" >
                            <cmd:EventToCommand Command="{Binding ComboSelChangedCommand}"
                                        PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <Button x:Name="filtreBtn" Content="Filtrer" Width="100" Height="24" Margin="40,10,10,10" Command="{Binding FiltreCommand}"/>
            </StackPanel>
        </StackPanel>
        <Button Content="Statistiques" HorizontalAlignment="Left" Margin="517,40,0,0" VerticalAlignment="Top" Width="75" />
        <Button Content="Excel" HorizontalAlignment="Left" Margin="630,40,0,0" VerticalAlignment="Top" Width="75" Command="{Binding ExcelCommand}"/>
        
        <TabControl Margin="10,142,10,65" HorizontalAlignment="Stretch" Width="Auto">
            <TabControl.Resources>
                <Style TargetType="TabItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Border Name="Border" BorderThickness="1,1,1,0" BorderBrush="Gainsboro" CornerRadius="4,4,0,0" Margin="2,0">
                                    <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="LightSkyBlue" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter TargetName="Border" Property="Background" Value="GhostWhite" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged" >
                    <cmd:EventToCommand Command="{Binding SelectChangedCommand}"
                                        PassEventArgsToCommand="True" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <TabItem Header="Collaborateurs">
                <DataGrid x:Name="ContentPanel" ItemsSource="{Binding ListeCol}" Margin="0" Width="auto" IsReadOnly="True" HorizontalAlignment="Left" Height="auto">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged" >
                            <cmd:EventToCommand Command="{Binding SelectedItemsCommand}"
                                                PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseDoubleClick" >
                            <cmd:EventToCommand Command="{Binding DoubleClickCommand}"
                                                PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <!--
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="Matricule" Width="auto" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding matricule}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Prénom" Width="auto" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding prenom}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Nom" Width="auto" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding nom}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                
                    </DataGrid.Columns>
                    -->
                    <!--
                    <DataGrid.Columns>
                        <DataGridTextColumn >
                            <DataGridTextColumn.HeaderTemplate>
                                <DataTemplate Resources="{Binding Headers}">
                                    <TextBlock Text="{Binding ''}"/>
                                </DataTemplate>
                            </DataGridTextColumn.HeaderTemplate>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                    -->
                </DataGrid>
            </TabItem>
            <TabItem Header="Praticiens" Margin="-3,0,3,0">
                <DataGrid x:Name="pratPanel" ItemsSource="{Binding ListePrat}" Margin="0" Width="auto"
                          IsReadOnly="True" HorizontalAlignment="Left" Height="auto">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged" >
                            <cmd:EventToCommand Command="{Binding SelectedItemsCommand}"
                                                PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseDoubleClick" >
                            <cmd:EventToCommand Command="{Binding DoubleClickCommand}"
                                                PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </DataGrid>
            </TabItem>
            <TabItem Header="Rapports">
                <DataGrid x:Name="rapPanel" ItemsSource="{Binding ListeRap}" Margin="0" Width="auto"
                          IsReadOnly="True" HorizontalAlignment="Left" Height="auto">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged" >
                            <cmd:EventToCommand Command="{Binding SelectedItemsCommand}"
                                                PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseDoubleClick" >
                            <cmd:EventToCommand Command="{Binding DoubleClickCommand}"
                                                PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <!--
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="N°" Width="auto" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding num_rapport}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                </DataGrid.Columns> -->
                </DataGrid>
            </TabItem>
        </TabControl>

        <!--        <DataGrid x:Name="ContentPanel" Margin="15,160,0,70" Width="auto" ItemsSource="{Binding ListeCol}"
                  IsReadOnly="True" AutoGenerateColumns="False" HorizontalAlignment="Left">
-->
        <!-- 
        <DataGrid x:Name="MaGrid" AlternationCount="2" VerticalAlignment="Top" MaxHeight="396" Margin="0,151,0,0" ItemsSource="{Binding ListeCol}"/>
        -->
        <DockPanel Height="30" Margin="0,0,0,10" VerticalAlignment="Bottom">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left"/>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                <Button x:Name="btrefresh" Content="Refresh" Width="90" Command="{Binding TestCommand}" />
                <Button x:Name="btquit" Content="Quitter" Width="90" Command="{Binding ExitCommand}"/>
            </StackPanel>
        </DockPanel>
    </Grid>
</Window>